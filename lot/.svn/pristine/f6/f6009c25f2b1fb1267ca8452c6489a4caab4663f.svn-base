package router

import (
	"global"
	"encoding/json"
)

var (
	m AutoGenerated
	redisKey  = ""
)

type AutoGenerated struct {
	ID         string   `json:"id"`
	Mtype      string   `json:"mtype"`
	Ptype      string   `json:"ptype"`
	LineID     []string `json:"line_id"`
	FcType     string   `json:"fc_type"`
	Starttime  string   `json:"starttime"`
	Endtime    string   `json:"endtime"`
	Remark     string   `json:"remark"`
	Addtime    string   `json:"addtime"`
	Updatetime string   `json:"updatetime"`
	Startdate  string   `json:"startdate"`
	Enddate    string   `json:"enddate"`
}

func CheckMainTain(siteid ,gtype string) int  {
	global.RedisClient.Ping()
	if gtype == "lottery"{
		redisKey = "maintain_api_all_line_ids"
	}else{
		redisKey = "maintain_spider_all_line_ids"
	}
	datas := global.RedisClient.Get(redisKey)
	if datas.Err() != nil {
		global.GlobalLogger.Debug("GetLine error: %v", datas.Err())
		return 0
	}
	str_arr := datas.Val()
	if len(str_arr) > 0 {
		err := json.Unmarshal([]byte(str_arr),&m)
		if err != nil{
			global.GlobalLogger.Error("err:not found siteId", )
			return 0
		}
		for _, v := range m.LineID {
			if v ==  siteid{
				global.GlobalLogger.Debug("MainTain error: %v", siteid)
				return 1
			}
		}
		return 0

	}
	return 0
}