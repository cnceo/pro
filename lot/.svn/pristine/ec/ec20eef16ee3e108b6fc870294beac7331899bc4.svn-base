<template>
  <div class="bj_kemp">
    <div class="b_k_box"  style="margin-top: 20px;">
      <ul class="ul1">
        <li class="thend">冠亚军和</li>
      </ul>
      <ul v-for="item in kemplist" class="ul2">
        <li v-for="(key,index) in item.object" :class="[key.flag?'styleclect':'']">
          <span :class="{'bor_none':!key.num}" class="one" @click="myclick(key,index)">{{key.num}}</span>
          <span :class="{'bor_none':!key.num}" class="tow" @click="myclick(key,index)">{{key.odd}}</span>
          <span class="three" @click.self="myclick(key,index)">
            <I-Input @on-keydown="tab_now(key)" @on-change="onchange(key)" :maxlength="9" ref="myfocus" v-model="key.money" @on-focus="onfocus(key)" @on-keyup="gogo(key)" @on-afterpaste="gogo(key)" size="small" style="width: 60px;" v-if="key.num"></I-Input>
          </span>
        </li>
      </ul>
    </div>
    <div class="footer1" style="margin-bottom: 20px">
      <div class="img">
        <span class="s1" @click="add_money(10)"></span>
        <span class="s2" @click="add_money(20)"></span>
        <span class="s3" @click="add_money(50)"></span>
        <span class="s4" @click="add_money(100)"></span>
        <span class="s5" @click="add_money(500)"></span>
        <span class="s6" @click="add_money(1000)"></span>
      </div>
      <button type="button" class="one"><span class="left">金额￥</span><I-Input @on-change="change_money()" :maxlength="9" style="width: 100px" size="small" v-model="money"  @on-keyup="push_money()" @on-afterpaste="push_money()"></I-Input>
      </button>
      <button type="button" class="two" style="padding: 8px;" @click="go_to()">立即下注</button>
      <button type="button" class="two" style="padding: 8px;margin-right:20px;" @click="reset()">重置</button>
    </div>
    <Me-Modal :modal="modal" @cancel="cancel"></Me-Modal>
  </div>
</template>

<script>
import api from "../../../api/config";
import MeModal from "../../../share_components/bet";
import {Input, Modal} from 'iview';
//import back from './bj_10_data'

export default {
  components: { MeModal,'I-Input':Input,Modal},
  data() {
    return {
      clectStyle: 0,
      money: "",
      modal: false
      //        c_data: {},
    };
  },
  props: {
    kemplist: {
      type: Array
    },
    c_data: {
      type: Object
    }
  },
  created() {
    //console.log("路由ID:" + this.$route.params.id);
    this.fetchData()
    this.$root.$on("success", e => {
      if (e) {
        this.modal = false;
        this.reset();
      }
    });
  },
  watch: {
    route: "fetchData"
  },
  methods: {
    fetchData: function(){
      this.reset();
    },
    myclick: function(item, i) {
      console.log(item);
      console.log(item.flag);
      if(item.money && item.flag == true){
        item.flag = false;
        item.money = '';
        this.$refs.myfocus[item.index].blur()
      }else if(item.money == '' && item.flag == false){
        this.$refs.myfocus[item.index].focus();
      }else if (item.flag == true && item.money == ''){
        item.flag = false;
      }else if (item.flag == true){
        item.money = this.money;
      }
    },
    onfocus: function(item){
      if(item.flag == false && item.money == ''){
        item.flag = true;
        item.money = this.money;
      }
    },
    push_money: function() {
      this.money = this.money.replace(/\D/g, "");
      this.computed_money();
    },
    change_money: function () { this.computed_money() },
    //按键tab
    tab_now: function(key) {
      if (!key.money) {
        key.flag = false;
      } else if (key.money) {
        key.flag = true;
      }
    },
    //监听input值得变化
    onchange: function(key) {
      if (!key.money) {
        key.flag = false;
      } else if (key.money) {
        key.flag = true;
      }
    },
    //每个球对应的输入框
    gogo: function(key) {
      key.money = key.money.replace(/\D/g, "");
    },
    add_money: function(type) {
      let money = this.money;
      this.money = Number(money) + type;
      this.computed_money();
    },
    //处理金额
    computed_money: function() {
      for (let i = 0; i < this.kemplist.length; i++) {
        for (let j = 0; j < this.kemplist[i].object.length; j++) {
          //添加金额参数入对象
          if (this.kemplist[i].object[j].flag) {
            this.kemplist[i].object[j].money = this.money;
          } else if (!this.kemplist[i].object[j].flag) {
            this.kemplist[i].object[j].money = "";
          }
        }
      }
    },
    go_to() {
      let a = this.money + 'a';
      this.money = a.replace(/\D/g, "");
      var kk = 0;
      for (let i = 0; i < this.kemplist.length; i++) {
        for (let j = 0; j < this.kemplist[i].object.length; j++) {
          if (this.kemplist[i].object[j].money != undefined) {
            let b = this.kemplist[i].object[j].money + 'b';
            this.kemplist[i].object[j].money = b.replace(/\D/g, "");
            kk += Number(this.kemplist[i].object[j].money);
          }
        }
      }
      if (kk != 0) {
        this.modal = true;
        document.querySelector("body").style.overflow = "hidden";
        this.$root.$emit("c_data", this.c_data);
        this.$root.$emit("id-selected", this.kemplist);
      } else if (kk == 0) {
        this.$Modal.warning({
          content: '请先下注',
        });
        window.setTimeout(() => {
          this.$Modal.remove()
        }, 500)
      }
    },
    cancel: function(item) {
      this.modal = false;
      document.querySelector("body").style.overflow = "auto";
    },
    reset: function() {
      for (let i = 0; i < this.kemplist.length; i++) {
        for (let j = 0; j < this.kemplist[i].object.length; j++) {
          this.kemplist[i].object[j].money = "";
          this.kemplist[i].object[j].flag = "";
          this.money = "";
          this.$root.$emit("reset", "");
        }
      }
    }
  }
};
</script>

<style lang="scss" src="../../../assets/css/bj_kemp.scss" scoped></style>
