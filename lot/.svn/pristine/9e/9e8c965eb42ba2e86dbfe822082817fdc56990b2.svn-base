import api from '../../../api/config'
import MeModal from '../../../share_components/bet'
// import back from './back_data'
import {Input, Modal} from 'iview'
export default {
components: { MeModal,'I-Input':Input,Modal},
  data() {
    return {
      money:'',
      modal:false
    }
  },
  props:{
    one:{
      type:Array,
    },
    c_data:{
      type:Object
    }
  },
  created() {
    this.reset();
    this.$root.$on('success',(e)=>{
      if(e){
        this.modal = false;
        this.reset()
      }
    })
  },
  watch: {
    // 如果路由有变化，会再次执行该方法
    '$route': 'reset'   // 只有这个页面初始化之后，这个监听事件才开始生效
  },
  methods: {
    numClick: function(item, i) {
      console.log(item);
      console.log(item.flag);
      if(item.money && item.flag == true){
        item.flag = false;
        item.money = '';
        this.$refs.myfocus[item.index].blur()
      }else if(item.money == '' && item.flag == false){
        this.$refs.myfocus[item.index].focus();
      }else if (item.flag == true && item.money == ''){
        item.flag = false;
      }else if (item.flag == true){
        item.money = this.money;
      }
    },
    onfocus: function(item){
      if(item.flag == false && item.money == ''){
        item.flag = true;
        item.money = this.money;
      }
    },
    //按键tab
    tab_now: function(key) {
      if (!key.money) {
        key.flag = false;
      } else if (key.money) {
        key.flag = true;
      }
    },
    //监听input值得变化
    onchange: function(key) {
      if (!key.money) {
        key.flag = false;
      } else if (key.money) {
        key.flag = true;
      }
    },
    //每个球对应的输入框
    gogo: function(key) {
      key.money = key.money.replace(/\D/g, "");
    },
    go_to: function() {
      this.$root.$emit('c_data',this.c_data);
      let a = this.money + 'a';
      this.money = a.replace(/\D/g, "");
      var kk = 0;
      for (let i = 0; i < this.one.length; i++) {
        for (let j = 0; j < this.one[i].object.length; j++) {
          let b = this.one[i].object[j].money + 'b';
          this.one[i].object[j].money = b.replace(/\D/g, "");
          kk += Number(this.one[i].object[j].money);
        }
      };
      //console.log('kk:' + kk);
      if (kk != 0) {
        this.modal = true;
        document.querySelector('body').style.overflow='hidden';
        this.$root.$emit('id-selected', this.one);
      } else if (kk == 0) {
        this.$Modal.warning({
          content: '请先下注'
        });
        window.setTimeout(() => {
          this.$Modal.remove()
        }, 500)
      }
    },
    cancel: function(item) {
      this.modal = false;
      document.querySelector('body').style.overflow='auto'
    },
    push_money: function() {
      // this.disabled = true;
      this.money = this.money.replace(/\D/g, "");
      this.computed_money()
    },
    change_money: function () { this.computed_money() },
    add_money: function(type){
      let money = this.money;
      this.money = Number(money) + type;
      this.computed_money()
    },
    //处理金额
    computed_money: function () {
      for (let i = 0; i < this.one.length; i++) {
        for (let j = 0; j < this.one[i].object.length; j++) {
          //添加金额参数入对象
          if (this.one[i].object[j].flag) {
            this.one[i].object[j].money = this.money
          }else if(!this.one[i].object[j].flag){
            this.one[i].object[j].money = ''
          }
        }
      }
    },
    reset: function() {
      for (let i = 0; i < this.one.length; i++) {
        for (let j = 0; j < this.one[i].object.length; j++) {
          this.one[i].object[j].money = '';
          this.one[i].object[j].flag = '';
          this.money = '';
          this.$root.$emit('reset', '')
        }
      }
    }
  }
};
